/*
 * myElexis-Server API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.myelexis.server.model;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.time.LocalDate;
import java.util.Locale;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * LockInfo
 */
@JsonPropertyOrder({
  LockInfo.JSON_PROPERTY_ELEMENT_ID,
  LockInfo.JSON_PROPERTY_ELEMENT_TYPE,
  LockInfo.JSON_PROPERTY_USER,
  LockInfo.JSON_PROPERTY_CREATION_DATE,
  LockInfo.JSON_PROPERTY_SYSTEM_UUID,
  LockInfo.JSON_PROPERTY_STATION_ID,
  LockInfo.JSON_PROPERTY_STATION_LABEL,
  LockInfo.JSON_PROPERTY_ELEMENT_STORE_TO_STRING
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-14T13:28:11.344655+02:00[Europe/Vienna]", comments = "Generator version: 7.16.0")
public class LockInfo {
  public static final String JSON_PROPERTY_ELEMENT_ID = "elementId";
  @jakarta.annotation.Nullable
  private String elementId;

  public static final String JSON_PROPERTY_ELEMENT_TYPE = "elementType";
  @jakarta.annotation.Nullable
  private String elementType;

  public static final String JSON_PROPERTY_USER = "user";
  @jakarta.annotation.Nullable
  private String user;

  public static final String JSON_PROPERTY_CREATION_DATE = "creationDate";
  @jakarta.annotation.Nullable
  private LocalDate creationDate;

  public static final String JSON_PROPERTY_SYSTEM_UUID = "systemUuid";
  @jakarta.annotation.Nullable
  private String systemUuid;

  public static final String JSON_PROPERTY_STATION_ID = "stationId";
  @jakarta.annotation.Nullable
  private String stationId;

  public static final String JSON_PROPERTY_STATION_LABEL = "stationLabel";
  @jakarta.annotation.Nullable
  private String stationLabel;

  public static final String JSON_PROPERTY_ELEMENT_STORE_TO_STRING = "elementStoreToString";
  @jakarta.annotation.Nullable
  private String elementStoreToString;

  public LockInfo() {
  }

  public LockInfo elementId(@jakarta.annotation.Nullable String elementId) {
    
    this.elementId = elementId;
    return this;
  }

  /**
   * Get elementId
   * @return elementId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ELEMENT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementId() {
    return elementId;
  }


  @JsonProperty(value = JSON_PROPERTY_ELEMENT_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementId(@jakarta.annotation.Nullable String elementId) {
    this.elementId = elementId;
  }

  public LockInfo elementType(@jakarta.annotation.Nullable String elementType) {
    
    this.elementType = elementType;
    return this;
  }

  /**
   * Get elementType
   * @return elementType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ELEMENT_TYPE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementType() {
    return elementType;
  }


  @JsonProperty(value = JSON_PROPERTY_ELEMENT_TYPE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementType(@jakarta.annotation.Nullable String elementType) {
    this.elementType = elementType;
  }

  public LockInfo user(@jakarta.annotation.Nullable String user) {
    
    this.user = user;
    return this;
  }

  /**
   * Get user
   * @return user
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_USER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUser() {
    return user;
  }


  @JsonProperty(value = JSON_PROPERTY_USER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUser(@jakarta.annotation.Nullable String user) {
    this.user = user;
  }

  public LockInfo creationDate(@jakarta.annotation.Nullable LocalDate creationDate) {
    
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Get creationDate
   * @return creationDate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_CREATION_DATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getCreationDate() {
    return creationDate;
  }


  @JsonProperty(value = JSON_PROPERTY_CREATION_DATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreationDate(@jakarta.annotation.Nullable LocalDate creationDate) {
    this.creationDate = creationDate;
  }

  public LockInfo systemUuid(@jakarta.annotation.Nullable String systemUuid) {
    
    this.systemUuid = systemUuid;
    return this;
  }

  /**
   * Get systemUuid
   * @return systemUuid
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_SYSTEM_UUID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getSystemUuid() {
    return systemUuid;
  }


  @JsonProperty(value = JSON_PROPERTY_SYSTEM_UUID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSystemUuid(@jakarta.annotation.Nullable String systemUuid) {
    this.systemUuid = systemUuid;
  }

  public LockInfo stationId(@jakarta.annotation.Nullable String stationId) {
    
    this.stationId = stationId;
    return this;
  }

  /**
   * Get stationId
   * @return stationId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_STATION_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStationId() {
    return stationId;
  }


  @JsonProperty(value = JSON_PROPERTY_STATION_ID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStationId(@jakarta.annotation.Nullable String stationId) {
    this.stationId = stationId;
  }

  public LockInfo stationLabel(@jakarta.annotation.Nullable String stationLabel) {
    
    this.stationLabel = stationLabel;
    return this;
  }

  /**
   * Get stationLabel
   * @return stationLabel
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_STATION_LABEL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStationLabel() {
    return stationLabel;
  }


  @JsonProperty(value = JSON_PROPERTY_STATION_LABEL, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStationLabel(@jakarta.annotation.Nullable String stationLabel) {
    this.stationLabel = stationLabel;
  }

  public LockInfo elementStoreToString(@jakarta.annotation.Nullable String elementStoreToString) {
    
    this.elementStoreToString = elementStoreToString;
    return this;
  }

  /**
   * Get elementStoreToString
   * @return elementStoreToString
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ELEMENT_STORE_TO_STRING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getElementStoreToString() {
    return elementStoreToString;
  }


  @JsonProperty(value = JSON_PROPERTY_ELEMENT_STORE_TO_STRING, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setElementStoreToString(@jakarta.annotation.Nullable String elementStoreToString) {
    this.elementStoreToString = elementStoreToString;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LockInfo lockInfo = (LockInfo) o;
    return Objects.equals(this.elementId, lockInfo.elementId) &&
        Objects.equals(this.elementType, lockInfo.elementType) &&
        Objects.equals(this.user, lockInfo.user) &&
        Objects.equals(this.creationDate, lockInfo.creationDate) &&
        Objects.equals(this.systemUuid, lockInfo.systemUuid) &&
        Objects.equals(this.stationId, lockInfo.stationId) &&
        Objects.equals(this.stationLabel, lockInfo.stationLabel) &&
        Objects.equals(this.elementStoreToString, lockInfo.elementStoreToString);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elementId, elementType, user, creationDate, systemUuid, stationId, stationLabel, elementStoreToString);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LockInfo {\n");
    sb.append("    elementId: ").append(toIndentedString(elementId)).append("\n");
    sb.append("    elementType: ").append(toIndentedString(elementType)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    systemUuid: ").append(toIndentedString(systemUuid)).append("\n");
    sb.append("    stationId: ").append(toIndentedString(stationId)).append("\n");
    sb.append("    stationLabel: ").append(toIndentedString(stationLabel)).append("\n");
    sb.append("    elementStoreToString: ").append(toIndentedString(elementStoreToString)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `elementId` to the URL query string
    if (getElementId() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%selementId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `elementType` to the URL query string
    if (getElementType() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%selementType%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementType()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `user` to the URL query string
    if (getUser() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%suser%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUser()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `creationDate` to the URL query string
    if (getCreationDate() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%screationDate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getCreationDate()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `systemUuid` to the URL query string
    if (getSystemUuid() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%ssystemUuid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getSystemUuid()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `stationId` to the URL query string
    if (getStationId() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sstationId%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStationId()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `stationLabel` to the URL query string
    if (getStationLabel() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sstationLabel%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getStationLabel()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `elementStoreToString` to the URL query string
    if (getElementStoreToString() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%selementStoreToString%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getElementStoreToString()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

