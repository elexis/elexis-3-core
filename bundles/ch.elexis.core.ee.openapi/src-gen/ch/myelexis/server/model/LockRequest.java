/*
 * server API
 * Created from Annotated Buildtime filter with 19155 known indexed classes
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.myelexis.server.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import ch.myelexis.server.model.LockInfo;
import ch.myelexis.server.model.Type;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import ch.myelexis.server.client.ApiClient;
/**
 * LockRequest
 */
@JsonPropertyOrder({
  LockRequest.JSON_PROPERTY_REQUEST_TYPE,
  LockRequest.JSON_PROPERTY_LOCK_INFO
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-01T13:09:01.232453+02:00[Europe/Vienna]", comments = "Generator version: 7.16.0")
public class LockRequest {
  public static final String JSON_PROPERTY_REQUEST_TYPE = "requestType";
  @jakarta.annotation.Nullable
  private Type requestType;

  public static final String JSON_PROPERTY_LOCK_INFO = "lockInfo";
  @jakarta.annotation.Nullable
  private LockInfo lockInfo;

  public LockRequest() { 
  }

  public LockRequest requestType(@jakarta.annotation.Nullable Type requestType) {
    this.requestType = requestType;
    return this;
  }

  /**
   * Get requestType
   * @return requestType
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_REQUEST_TYPE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Type getRequestType() {
    return requestType;
  }


  @JsonProperty(value = JSON_PROPERTY_REQUEST_TYPE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRequestType(@jakarta.annotation.Nullable Type requestType) {
    this.requestType = requestType;
  }


  public LockRequest lockInfo(@jakarta.annotation.Nullable LockInfo lockInfo) {
    this.lockInfo = lockInfo;
    return this;
  }

  /**
   * Get lockInfo
   * @return lockInfo
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LOCK_INFO, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public LockInfo getLockInfo() {
    return lockInfo;
  }


  @JsonProperty(value = JSON_PROPERTY_LOCK_INFO, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLockInfo(@jakarta.annotation.Nullable LockInfo lockInfo) {
    this.lockInfo = lockInfo;
  }


  /**
   * Return true if this LockRequest object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LockRequest lockRequest = (LockRequest) o;
    return Objects.equals(this.requestType, lockRequest.requestType) &&
        Objects.equals(this.lockInfo, lockRequest.lockInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(requestType, lockInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LockRequest {\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    lockInfo: ").append(toIndentedString(lockInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `requestType` to the URL query string
    if (getRequestType() != null) {
      joiner.add(String.format(Locale.ROOT, "%srequestType%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRequestType()))));
    }

    // add `lockInfo` to the URL query string
    if (getLockInfo() != null) {
      joiner.add(getLockInfo().toUrlQueryString(prefix + "lockInfo" + suffix));
    }

    return joiner.toString();
  }
}

