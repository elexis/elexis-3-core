/*
 * myElexis-Server API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.myelexis.server.model;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import java.time.OffsetDateTime;
import java.util.Locale;
import java.util.Objects;
import java.util.StringJoiner;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * InstanceStatus
 */
@JsonPropertyOrder({
  InstanceStatus.JSON_PROPERTY_UUID,
  InstanceStatus.JSON_PROPERTY_ACTIVE_USER,
  InstanceStatus.JSON_PROPERTY_IDENTIFIER,
  InstanceStatus.JSON_PROPERTY_VERSION,
  InstanceStatus.JSON_PROPERTY_STATE,
  InstanceStatus.JSON_PROPERTY_OPERATING_SYSTEM,
  InstanceStatus.JSON_PROPERTY_FIRST_SEEN,
  InstanceStatus.JSON_PROPERTY_LAST_UPDATE,
  InstanceStatus.JSON_PROPERTY_REMOTE_ADDRESS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-14T13:28:11.344655+02:00[Europe/Vienna]", comments = "Generator version: 7.16.0")
public class InstanceStatus {
  public static final String JSON_PROPERTY_UUID = "uuid";
  @jakarta.annotation.Nullable
  private String uuid;

  public static final String JSON_PROPERTY_ACTIVE_USER = "activeUser";
  @jakarta.annotation.Nullable
  private String activeUser;

  public static final String JSON_PROPERTY_IDENTIFIER = "identifier";
  @jakarta.annotation.Nullable
  private String identifier;

  public static final String JSON_PROPERTY_VERSION = "version";
  @jakarta.annotation.Nullable
  private String version;

  public static final String JSON_PROPERTY_STATE = "state";
  @jakarta.annotation.Nullable
  private STATE state;

  public static final String JSON_PROPERTY_OPERATING_SYSTEM = "operatingSystem";
  @jakarta.annotation.Nullable
  private String operatingSystem;

  public static final String JSON_PROPERTY_FIRST_SEEN = "firstSeen";
  @jakarta.annotation.Nullable
  private OffsetDateTime firstSeen;

  public static final String JSON_PROPERTY_LAST_UPDATE = "lastUpdate";
  @jakarta.annotation.Nullable
  private OffsetDateTime lastUpdate;

  public static final String JSON_PROPERTY_REMOTE_ADDRESS = "remoteAddress";
  @jakarta.annotation.Nullable
  private String remoteAddress;

  public InstanceStatus() {
  }

  public InstanceStatus uuid(@jakarta.annotation.Nullable String uuid) {
    
    this.uuid = uuid;
    return this;
  }

  /**
   * Get uuid
   * @return uuid
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_UUID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUuid() {
    return uuid;
  }


  @JsonProperty(value = JSON_PROPERTY_UUID, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUuid(@jakarta.annotation.Nullable String uuid) {
    this.uuid = uuid;
  }

  public InstanceStatus activeUser(@jakarta.annotation.Nullable String activeUser) {
    
    this.activeUser = activeUser;
    return this;
  }

  /**
   * Get activeUser
   * @return activeUser
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_ACTIVE_USER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getActiveUser() {
    return activeUser;
  }


  @JsonProperty(value = JSON_PROPERTY_ACTIVE_USER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setActiveUser(@jakarta.annotation.Nullable String activeUser) {
    this.activeUser = activeUser;
  }

  public InstanceStatus identifier(@jakarta.annotation.Nullable String identifier) {
    
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_IDENTIFIER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getIdentifier() {
    return identifier;
  }


  @JsonProperty(value = JSON_PROPERTY_IDENTIFIER, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIdentifier(@jakarta.annotation.Nullable String identifier) {
    this.identifier = identifier;
  }

  public InstanceStatus version(@jakarta.annotation.Nullable String version) {
    
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_VERSION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersion() {
    return version;
  }


  @JsonProperty(value = JSON_PROPERTY_VERSION, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersion(@jakarta.annotation.Nullable String version) {
    this.version = version;
  }

  public InstanceStatus state(@jakarta.annotation.Nullable STATE state) {
    
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_STATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public STATE getState() {
    return state;
  }


  @JsonProperty(value = JSON_PROPERTY_STATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setState(@jakarta.annotation.Nullable STATE state) {
    this.state = state;
  }

  public InstanceStatus operatingSystem(@jakarta.annotation.Nullable String operatingSystem) {
    
    this.operatingSystem = operatingSystem;
    return this;
  }

  /**
   * Get operatingSystem
   * @return operatingSystem
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_OPERATING_SYSTEM, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOperatingSystem() {
    return operatingSystem;
  }


  @JsonProperty(value = JSON_PROPERTY_OPERATING_SYSTEM, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOperatingSystem(@jakarta.annotation.Nullable String operatingSystem) {
    this.operatingSystem = operatingSystem;
  }

  public InstanceStatus firstSeen(@jakarta.annotation.Nullable OffsetDateTime firstSeen) {
    
    this.firstSeen = firstSeen;
    return this;
  }

  /**
   * Get firstSeen
   * @return firstSeen
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_FIRST_SEEN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getFirstSeen() {
    return firstSeen;
  }


  @JsonProperty(value = JSON_PROPERTY_FIRST_SEEN, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFirstSeen(@jakarta.annotation.Nullable OffsetDateTime firstSeen) {
    this.firstSeen = firstSeen;
  }

  public InstanceStatus lastUpdate(@jakarta.annotation.Nullable OffsetDateTime lastUpdate) {
    
    this.lastUpdate = lastUpdate;
    return this;
  }

  /**
   * Get lastUpdate
   * @return lastUpdate
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_LAST_UPDATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getLastUpdate() {
    return lastUpdate;
  }


  @JsonProperty(value = JSON_PROPERTY_LAST_UPDATE, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLastUpdate(@jakarta.annotation.Nullable OffsetDateTime lastUpdate) {
    this.lastUpdate = lastUpdate;
  }

  public InstanceStatus remoteAddress(@jakarta.annotation.Nullable String remoteAddress) {
    
    this.remoteAddress = remoteAddress;
    return this;
  }

  /**
   * Get remoteAddress
   * @return remoteAddress
   */
  @jakarta.annotation.Nullable
  @JsonProperty(value = JSON_PROPERTY_REMOTE_ADDRESS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getRemoteAddress() {
    return remoteAddress;
  }


  @JsonProperty(value = JSON_PROPERTY_REMOTE_ADDRESS, required = false)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRemoteAddress(@jakarta.annotation.Nullable String remoteAddress) {
    this.remoteAddress = remoteAddress;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InstanceStatus instanceStatus = (InstanceStatus) o;
    return Objects.equals(this.uuid, instanceStatus.uuid) &&
        Objects.equals(this.activeUser, instanceStatus.activeUser) &&
        Objects.equals(this.identifier, instanceStatus.identifier) &&
        Objects.equals(this.version, instanceStatus.version) &&
        Objects.equals(this.state, instanceStatus.state) &&
        Objects.equals(this.operatingSystem, instanceStatus.operatingSystem) &&
        Objects.equals(this.firstSeen, instanceStatus.firstSeen) &&
        Objects.equals(this.lastUpdate, instanceStatus.lastUpdate) &&
        Objects.equals(this.remoteAddress, instanceStatus.remoteAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, activeUser, identifier, version, state, operatingSystem, firstSeen, lastUpdate, remoteAddress);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InstanceStatus {\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    activeUser: ").append(toIndentedString(activeUser)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    operatingSystem: ").append(toIndentedString(operatingSystem)).append("\n");
    sb.append("    firstSeen: ").append(toIndentedString(firstSeen)).append("\n");
    sb.append("    lastUpdate: ").append(toIndentedString(lastUpdate)).append("\n");
    sb.append("    remoteAddress: ").append(toIndentedString(remoteAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `uuid` to the URL query string
    if (getUuid() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%suuid%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getUuid()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `activeUser` to the URL query string
    if (getActiveUser() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sactiveUser%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getActiveUser()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `identifier` to the URL query string
    if (getIdentifier() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sidentifier%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getIdentifier()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `version` to the URL query string
    if (getVersion() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sversion%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getVersion()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `state` to the URL query string
    if (getState() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sstate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getState()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `operatingSystem` to the URL query string
    if (getOperatingSystem() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%soperatingSystem%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOperatingSystem()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `firstSeen` to the URL query string
    if (getFirstSeen() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sfirstSeen%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getFirstSeen()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `lastUpdate` to the URL query string
    if (getLastUpdate() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%slastUpdate%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getLastUpdate()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    // add `remoteAddress` to the URL query string
    if (getRemoteAddress() != null) {
      try {
        joiner.add(String.format(Locale.ROOT, "%sremoteAddress%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getRemoteAddress()), "UTF-8").replaceAll("\\+", "%20")));
      } catch (UnsupportedEncodingException e) {
        // Should never happen, UTF-8 is always supported
        throw new RuntimeException(e);
      }
    }

    return joiner.toString();
  }

}

