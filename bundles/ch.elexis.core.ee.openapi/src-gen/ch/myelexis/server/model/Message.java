/*
 * myElexis-Server API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ch.myelexis.server.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import java.util.Locale;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import ch.myelexis.server.client.ApiClient;
/**
 * Message
 */
@JsonPropertyOrder({
  Message.JSON_PROPERTY_RECIPIENT_URI,
  Message.JSON_PROPERTY_MESSAGE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-10-06T12:40:32.737785+02:00[Europe/Vienna]", comments = "Generator version: 7.16.0")
public class Message {
  public static final String JSON_PROPERTY_RECIPIENT_URI = "recipientUri";
  @jakarta.annotation.Nonnull
  private String recipientUri;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  @jakarta.annotation.Nonnull
  private String message;

  public Message() { 
  }

  public Message recipientUri(@jakarta.annotation.Nonnull String recipientUri) {
    this.recipientUri = recipientUri;
    return this;
  }

  /**
   * Get recipientUri
   * @return recipientUri
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_RECIPIENT_URI, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getRecipientUri() {
    return recipientUri;
  }


  @JsonProperty(value = JSON_PROPERTY_RECIPIENT_URI, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRecipientUri(@jakarta.annotation.Nonnull String recipientUri) {
    this.recipientUri = recipientUri;
  }


  public Message message(@jakarta.annotation.Nonnull String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(value = JSON_PROPERTY_MESSAGE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getMessage() {
    return message;
  }


  @JsonProperty(value = JSON_PROPERTY_MESSAGE, required = true)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessage(@jakarta.annotation.Nonnull String message) {
    this.message = message;
  }


  /**
   * Return true if this Message object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Message message = (Message) o;
    return Objects.equals(this.recipientUri, message.recipientUri) &&
        Objects.equals(this.message, message.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(recipientUri, message);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Message {\n");
    sb.append("    recipientUri: ").append(toIndentedString(recipientUri)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `recipientUri` to the URL query string
    if (getRecipientUri() != null) {
      joiner.add(String.format(Locale.ROOT, "%srecipientUri%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getRecipientUri()))));
    }

    // add `message` to the URL query string
    if (getMessage() != null) {
      joiner.add(String.format(Locale.ROOT, "%smessage%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getMessage()))));
    }

    return joiner.toString();
  }
}

